@page "/CoEntrada"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Data
@using ProyectoFinalAp2.Models
@inject AuthenticationStateProvider AuthenticationStateProvider



    <EditForm Model="Listado">

        @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
       .Result.User.Identity.IsAuthenticated)
        {
            <h1>Consulta de Entradas</h1>


            <form>


                <div class="form-row">


                    <div class="form-inline ">
                        <label for="Filtro" class="LabelConsulta     ">Filtro: </label>
                        <select class="form-control   " @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Codigo</option>
                        </select>
                    </div>


                    <div class="form-inline DivConsulta ">
                        <label for="Criterio">Criterio: </label>
                        <InputText @bind-Value="@Criterio" class="form-control placeholder="Criterio" />
                        <p class="validation-message"> @Mensaje </p>
                    </div>


                    <div class="DivConsulta text-center     col-12">
                        <input class="ml-1" type="checkbox" @bind-value="FiltrarFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
                    </div>


                    <div class="form-inline DivConsulta ">
                        <label for="Desde">Desde: </label>
                        <InputDate @bind-Value="@Desde" class="form-control   " />
                    </div>

                    <div class="form-inline ">
                        <label for="Hasta">Hasta: </label>
                        <InputDate @bind-Value="@Hasta" class="form-control " />
                    </div>


                    <div class="DivConsulta text-center     ">
                        <button type="button" class="btn btn-primary" @onclick="Buscar">@*<span class="oi oi-magnifying-glass" />*@ Buscar</button>
                    </div>



                    <table class="table" style="margin-top: 20px">
                        <thead class="thead-light">
                            <tr>
                                <th>Codigo</th>
                                <th>Fecha</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ListadoPaginado.Count == 0)
                            {
                                <tr>
                                    <th colspan="12" style="color:black; text-align: center">"No hay datos "</th>
                                </tr>
                            }
                            else
                            {

                                @foreach (var item in ListadoPaginado)
                                {
                                    <tr>
                                        <th>@item.IdEntrada</th>
                                        <th>@item.Fecha.ToString("dd/MM/yyyy")</th>
                                        <th><a class="btn btn-light" href="ReEntrada/@item.IdEntrada">Ver</a></th>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </form>

            <div class="form-row col-12 justify-content-center">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaAnterior">
                                <span class="oi oi-media-skip"> Anterior</span>
                            </a>
                        </li>

                        @for (int i = 1; i <= Paginas; i++)
                        {
                            <li class="page-item disabled"><a class="page-link">@i</a></li>
                        }

                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaSiguiente">
                                <span class="oi oi-media-skip"> Siguiente</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
        else
        {
            <h1>No esta registrado</h1>
            <a href="ReUsuarios" class="btn btn-primary">Ir al Registro</a>
        }
    </EditForm>
@code {
    public ControllersEntrada controllersEntrada = new ControllersEntrada();
    private List<Entradas> Listado { get; set; }
    private List<Entradas> ListadoPaginado { get; set; }

    private string Criterio = string.Empty;
    private string Filtro = string.Empty;
    private bool FiltrarFecha = false;
    private DateTime Desde = DateTime.Now;
    private DateTime Hasta = DateTime.Now;
    private string Mensaje = string.Empty;


    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;

    Contexto contexto = new Contexto();
    Paginacion paginacion = new Paginacion();

    protected override void OnInitialized()
    {
        Listado = controllersEntrada.GetList(e => true);
        Filtro = "0";
        Desde = DateTime.Now;
        Hasta = DateTime.Now;

        IniciarPaginacion();
    }

    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = Listado.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        ListadoPaginado = Listado.Take(paginacion.Mostrar).ToList();
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            ListadoPaginado = Listado
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            ListadoPaginado = Listado
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    public void FiltrarPorLaFecha()
    {
        if (FiltrarFecha == true && Listado.Count > 0)
        {
            Listado = Listado.Where(p => p.Fecha.Date >= Desde.Date && p.Fecha.Date <= Hasta.Date).ToList();
            FiltrarFecha = false;
        }
        IniciarPaginacion();
    }

    private void Buscar()
    {
        if (Filtro == "0")
        {
            Listado = controllersEntrada.GetList(e => true);
            FiltrarPorLaFecha();
        }
        else
        {
            if (Criterio == "")
            {
                Mensaje = "Agregue el criterio de busqueda.";
            }
            else
            {
                Listado = controllersEntrada.GetList(e => true);
                switch (Filtro)
                {
                    case "1":
                        Listado = Listado.Where(e => e.IdEntrada.ToString().Contains(Criterio.ToString())).ToList();
                        Mensaje = "";
                        break;
                }
                FiltrarPorLaFecha();
            }

        }
    }
}
