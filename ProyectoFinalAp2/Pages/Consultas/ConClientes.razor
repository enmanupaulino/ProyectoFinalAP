@page "/ConClientes"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Data
@using ProyectoFinalAp2.Models
@inject AuthenticationStateProvider AuthenticationStateProvider



    <EditForm Model="Listado">
        @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
        .Result.User.Identity.IsAuthenticated)
        {

            <h1>Consulta de Clientes</h1>


            <div class="form-row">



                <div class="form-inline">
                    <label for="Filtro">Filtro: </label>
                    <select class="form-control     col-sm-8     col-md-9" @bind="Filtro">
                        <option value="0">Todo</option>
                        <option value="1">Id</option>
                        <option value="2">Nombre</option>
                        <option value="3">Direccion</option>
                        <option value="4">Celular</option>
                        <option value="5">Correo</option>
                    </select>
                </div>


                <div class="form-inline ">
                    <label for="Criterio">Criterio: </label>
                    <InputText @bind-Value="@Criterio" class="form-control     col-sm-8     col-md-9" placeholder="Criterio" />
                    <p class="validation-message"> @mensaje </p>
                </div>





                <div class="DivConsulta text-center     ">
                    <input class="ml-1" type="checkbox" @bind-value="BuscarFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
                </div>


                <div class="form-inline DivConsulta ">
                    <label for="Desde" class="LabelConsulta     ">Desde: </label>
                    <InputDate @bind-Value="@DesdeFecha" class="form-control    " />
                </div>


                <div class="form-inline  ">
                    <label for="Hasta  ">Hasta: </label>
                    <InputDate @bind-Value="@HastaFecha" class="form-control  " />
                </div>


                <div class="DivConsulta text-center    ">
                    <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                </div>



                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th>Codigo</th>
                            <th>Nombres</th>
                            <th>Direccion</th>
                            <th>Telefono</th>
                            <th>Correo</th>

                            <th>Fecha Creacion</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ListadoPaginado.Count == 0)
                        {
                            <tr>
                                <th colspan="12" style="color:black; text-align: center">"No hay datos"</th>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in ListadoPaginado)
                            {
                                <tr>
                                    <th>@item.IdCliente</th>
                                    <th>@item.Nombre</th>
                                    <th>@item.Direccion</th>
                                    <th>@item.Telefono</th>
                                    <th>@item.Correo</th>

                                    <th>@item.Fecha.ToString("dd/MM/yyyy")</th>
                                    <td><a class="btn btn-light" href="rClientes/@item.IdCliente">Ver</a></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div class="form-row col-12 justify-content-center">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaAnterior">
                                <span class="oi oi-media-skip-backward"></span>
                            </a>
                        </li>

                        @for (int i = 1; i <= Paginas; i++)
                        {
                            <li class="page-item disabled"><a class="page-link">@i</a></li>
                        }

                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaSiguiente">
                                <span class="oi oi-media-skip-forward"></span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
        else
        {
            <h1>No esta registrado</h1>
            <a href="ReUsuarios" class="btn btn-primary">Ir al Registro</a>
        }
    </EditForm>

@code {
    private List<Clientes> Listado { get; set; }
    private List<Clientes> ListadoPaginado { get; set; }
    ControllersClientes controllersClientes = new ControllersClientes();

    private string Filtro { get; set; }
    private string Criterio { get; set; }
    private string mensaje = string.Empty;

    public bool BuscarFecha { get; set; }
    public DateTime DesdeFecha { get; set; }
    public DateTime HastaFecha { get; set; }

    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;

    Contexto contexto = new Contexto();
    Paginacion paginacion = new Paginacion();

    protected override void OnInitialized()
    {
        Listado = controllersClientes.GetList(e => true);
        Filtro = "0";
        DesdeFecha = DateTime.Now;
        HastaFecha = DateTime.Now;

        IniciarPaginacion();
    }

    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = Listado.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        ListadoPaginado = Listado.Take(paginacion.Mostrar).ToList();
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            ListadoPaginado = Listado
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            ListadoPaginado = Listado
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    public void FiltrarPorLaFecha()
    {
        if (BuscarFecha == true && Listado.Count > 0)
        {
            Listado = Listado.Where(p => p.Fecha.Date >= DesdeFecha.Date && p.Fecha.Date <= HastaFecha.Date).ToList();
            BuscarFecha = false;
        }
        IniciarPaginacion();
    }

    private void Buscar()
    {
        mensaje = string.Empty;

        try
        {
            if (Filtro == "0")
            {
                Listado = controllersClientes.GetList(e => true);
                FiltrarPorLaFecha();
            }
            else
            {
                if (Criterio == "")
                {
                    mensaje = "Agregue el criterio de busqueda.";
                }
                else
                {
                    Listado = controllersClientes.GetList(e => true);

                    switch (Filtro)
                    {
                        case "1":
                            Listado = Listado.Where(e => e.IdCliente.ToString().Contains(Criterio.ToString())).ToList();
                            break;
                        case "2":
                            Listado = Listado.Where(e => e.Nombre.ToUpper().Contains(Criterio.ToUpper())).ToList();
                            break;
                        case "3":
                            Listado = Listado.Where(e => e.Direccion.ToUpper().Contains(Criterio.ToUpper())).ToList();
                            break;
                        case "4":
                            Listado = Listado.Where(e => e.Telefono.ToUpper().Contains(Criterio.ToUpper())).ToList();
                            break;
                        case "5":
                            Listado = Listado.Where(e => e.Correo.ToUpper().Contains(Criterio.ToUpper())).ToList();
                            break;
                    }

                    FiltrarPorLaFecha();

                }
            }
        }
        catch (Exception)
        {
            throw;
        }
    }


}
