@page  "/ReTrabajos"
@page  "/ReTrabajos/{CurrentId:int}"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Models
@inject AuthenticationStateProvider AuthenticationStateProvider



    <EditForm Model="@trabajos" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
   .Result.User.Identity.IsAuthenticated)
        {

            <div class="container">
                <div style="        margin: 0;
        padding: 0;
        box-sizing: border-box;
        max-width: 800px;
        background-color:  #93baea;
        box-shadow: 7px 13px 37px #93baea;
        padding: 60px;
        margin: auto;
        margin-top: 60px;
        border-radius: 4px;
    ">                <center>
                             <h3>Registro de Trabajos</h3>
                             </center>
                    <div class=" form-group">
                        <label for=" RegistroId">Id</label>
                        <InputNumber @bind-Value="trabajos.IdTrabajo" class="form-control"></InputNumber>
                        <button type="button" class=" btn-primary " @onclick="Buscar">Buscar</button>
                        <ValidationMessage For="@(() => trabajos.IdTrabajo)" />

                    </div>
                    <div class="form-group">
                        <label for=" Descripcion">Descripcion</label>
                        <InputText @bind-Value="trabajos.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => trabajos.Descripcion)" />
                    </div>
                    <div class="form-group">
                        <label for=" CantidadHojas">Cantidad de Hojas</label>
                        <InputNumber @bind-Value="trabajos.CantidadHojas" @oninput="Calcular" @onfocus="Calcular" @onfocusout="Calcular" class="form-control" />
                        <ValidationMessage For="@(() => trabajos.CantidadHojas)" />
                    </div>
                    <div class="form-group">
                        <label for=" Total">Total</label>
                        <InputNumber @bind-Value="trabajos.Total" disabled class="form-control" />
                        <ValidationMessage For="@(() => trabajos.Total)" />
                    </div>
                    <div class="form-group">
                        <label for=" Fecha">Fecha</label>
                        <InputDate @bind-Value="trabajos.Fecha" class="form-control" />
                        <ValidationMessage For="@(() => trabajos.Fecha)" />
                    </div>





                    <button type="button" class="btn btn-outline-info" @onclick="Agregar">Agregar</button>

                    <br />

                    <div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Trabajo Id</th>
                                    <th>Decripcion</th>
                                    <th>Cantidad de Hojas</th>
                                    <th>Total</th>



                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in trabajos.Detalles)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.IdTrabajo</td>
                                        <th>@item.Descripcion</th>
                                        <td>@item.CantidadHojas</td>
                                        <th>@item.Total</th>





                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="form-group">

                        <button type="submit" class="btn btn-primary"> Guardar</button>
                        <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                        <button type="button" class="btn btn-danger" @onclick="Limpiar">Limpiar</button>
                    </div>

                    <h5>@Mensaje</h5>
                </div>
                </div>
                    }
                    else
                    {
                    <h1>No esta registrado</h1>
                    <a href="ReUsuarios" class="btn btn-primary">Ir al Registro</a>
                    }

        </EditForm>




@code {


    List<Trabajos> lista = new List<Trabajos>();




    private void Agregar()
    {

        {
            trabajos.Detalles.Add(new TrabajoDetalle()
            {

                IdTrabajo = trabajos.IdTrabajo,

                CantidadHojas = trabajos.CantidadHojas,

                Total = trabajos.CantidadHojas * 10,
                Descripcion = trabajos.Descripcion,

            });

        }

    }




    public Trabajos trabajos = new Trabajos();
    public string Mensaje;
    private String problema;
    private String solucion;
    private int Id;

    [Parameter]
    public int CurrentId { get; set; }
    protected override void OnInitialized()
    {
        ControllersTrabajo controllersTrabajo = new ControllersTrabajo();
        if (CurrentId != 0)
        {
            trabajos = controllersTrabajo.Buscar(CurrentId);
        }
    }

    public void Calcular()
    {
        trabajos.Total = (trabajos.CantidadHojas * 10);
    }

    public void Guardar()
    {
        ControllersTrabajo controllersTrabajo = new ControllersTrabajo();


        if (controllersTrabajo.Guardar(trabajos))
        {
            Mensaje = "Guardado correctamente";
            this.trabajos = new Trabajos();
            problema = string.Empty;
            solucion = string.Empty;
            Id = 0;

        }
        else
        {

            Mensaje = "Guardado";
            this.trabajos = new Trabajos();
        }

    }
    public void Limpiar()
    {
        this.trabajos = new Trabajos();

    }
    public void Buscar()
    {
        ControllersTrabajo controllersTrabajo = new ControllersTrabajo(); ;

        var trabajo = controllersTrabajo.Buscar(trabajos.IdTrabajo);
        if (trabajo != null)
        {
            trabajos = trabajo;
            Mensaje = "Trabajo encontrado";
        }
        else
        {
            this.trabajos = new Trabajos();
            Mensaje = "Trabajo no encontrado";
        }

    }
    public void Eliminar()
    {
        ControllersTrabajo controllersTrabajo = new ControllersTrabajo();

        var trabajo = controllersTrabajo.Buscar(trabajos.IdTrabajo);
        if (trabajo != null)
        {
            if (controllersTrabajo.Eliminar(trabajos.IdTrabajo))
            {
                this.trabajos = new Trabajos();
                Mensaje = "Trabajo Elimincado";
            }
            else
            {
                this.trabajos = new Trabajos();
                Mensaje = "Error al Eliminar ";
            }
        }
    }


}
