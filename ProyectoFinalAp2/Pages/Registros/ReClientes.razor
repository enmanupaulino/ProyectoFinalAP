@page "/ReClientes"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Models
@inject AuthenticationStateProvider AuthenticationStateProvider


    <EditForm Model="@clientes" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
         .Result.User.Identity.IsAuthenticated)
        {
            <h3>Registro de Clientes</h3>

            <div class=" form-group">
                <label for=" Clientes Id">Id</label>
                <InputNumber @bind-Value="clientes.IdCliente"></InputNumber>
                <button type="button" class=" btn-primary " @onclick="Buscar">Buscar</button>
                <ValidationMessage For="@(() => clientes.IdCliente)" />

            </div>
            <div class="form-group">
                <label for=" Nombre">Nombre</label>
                <InputText @bind-Value="clientes.Nombre" class="form-group" />
                <ValidationMessage For="@(() => clientes.Nombre)" />
            </div>


            <div class="form-group">
                <label for=" Cedula">Cedula</label>
                <InputText @bind-Value="clientes.Cedula" class="form-group"></InputText>
                <ValidationMessage For="@(() => clientes.Cedula)" />
            </div>

            <div class="form-group">
                <label for="Correo">Correo</label>
                <InputText @bind-Value="clientes.Correo" class="form-group"></InputText>
                <ValidationMessage For="@(() => clientes.Correo)" />
            </div>



            <div class="form-group">
                <label for="Fecha">Fecha</label>
                <InputDate @bind-Value="clientes.Fecha" class="form-group" />
                <ValidationMessage For="@(() => clientes.Fecha)" />
            </div>
            <div class="form-group">
                <label for="Direccion">Direccion</label>
                <InputText @bind-Value="clientes.Direccion" class="form-group" />
                <ValidationMessage For="@(() => clientes.Direccion)" />
            </div>
            <div class="form-group">
                <label for="Telefono">Telefono</label>
                <InputText @bind-Value="clientes.Telefono" class="form-group" />
                <ValidationMessage For="@(() => clientes.Telefono)" />
            </div>

            <div class="form-group">
                <label for="Deuda">Deuda</label>
                <InputNumber @bind-Value="clientes.Deuda" class="form-group" />
                <ValidationMessage For="@(() => clientes.Deuda)" />
            </div>


            <div class="form-group">

                <button type="submit" class="btn btn-primary"> Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                <button type="button" class="btn btn-danger" @onclick="Limpiar">Limpiar</button>
            </div>

            <h5>@Mensaje</h5>


        }
        else
        {
            <h1>No esta registrado</h1>
            <a href="ReUsuarios" class="btn btn-primary">Ir al Registro</a>
        }

    </EditForm>


@code {
    public Clientes clientes = new Clientes();
    public string Mensaje;


    public void Guardar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();
        

        if (controllersClientes.Guardar(clientes))
        {
            this.clientes = new Clientes();
            Mensaje = "Guardado";

        }
        else
        {
            this.clientes = new Clientes();
            Mensaje = "error al guardar";
        }

    }
    public void Limpiar()
    {
        this.clientes = new Clientes();

    }
    public void Buscar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();

        var cliente = controllersClientes.Buscar(clientes.IdCliente);
        if (cliente != null)
        {
            cliente = clientes;
            Mensaje = "Cliente Encontrado, Exito";
        }
        else
        {
            this.clientes = new Clientes();
            Mensaje = "Error en la busqueda, Fallo";
        }

    }
    public void Eliminar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();

        var cliente = controllersClientes.Buscar(clientes.IdCliente);
        if (cliente != null)
        {
            if (controllersClientes.Eliminar(clientes.IdCliente))
            {
                this.clientes = new Clientes();
                Mensaje = "Cliente Eliminado, Exito";
            }
            else
            {
                this.clientes = new Clientes();
                Mensaje = "Error al eliminar,Fallo";
            }
        }
    }
}
