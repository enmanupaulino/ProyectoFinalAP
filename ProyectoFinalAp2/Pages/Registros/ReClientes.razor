@page "/ReClientes"
@page "/ReClientes/{ClienteId:int}"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
 

    <style>
        body{
            background-color: #808080;

        }
        

    </style>
<EditForm Model="@clientes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
  .Result.User.Identity.IsAuthenticated)
    {
       

        <div class="container">
            <div style=" margin: 0; padding: 0; box-sizing: border-box; max-width: 800px; background-color: #2fbac8; box-shadow: 7px 13px 37px #93baea; padding: 60px; margin: auto; margin-top: 60px; border-radius: 4px; ">
                <center>
                    <h3>Registro de Clientes</h3>
                </center>

                <div class=" form-group">
                    <label for=" Clientes Id"><h4 class="font-weight-bold">Id</h4></label>
                    <InputNumber @bind-Value="clientes.IdCliente" class="form-control"></InputNumber>
                    <button type="button" class=" btn-primary " @onclick="Buscar">Buscar</button>
                    <ValidationMessage For="@(() => clientes.IdCliente)" />

                </div>
                <div class="form-group">
                    <label for=" Nombre"><h4 class="font-weight-bold">Nombre</h4></label>
                    <InputText @bind-Value="clientes.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => clientes.Nombre)" />
                </div>


                <div class="form-group">
                    <label for=" Cedula"><h4 class="font-weight-bold">Cedula</h4></label>
                    <InputText @bind-Value="clientes.Cedula" class="form-control"></InputText>
                    <ValidationMessage For="@(() => clientes.Cedula)" />
                </div>

                <div class="form-group">
                    <label for="Correo"><h4 class="font-weight-bold">Correo</h4></label>
                    <InputText @bind-Value="clientes.Correo" class="form-control"></InputText>
                    <ValidationMessage For="@(() => clientes.Correo)" />
                </div>



                <div class="form-group">
                    <label for="Fecha"><h4 class="font-weight-bold">Fecha</h4></label>
                    <InputDate @bind-Value="clientes.Fecha" class="form-control" />
                    <ValidationMessage For="@(() => clientes.Fecha)" />
                </div>
                <div class="form-group">
                    <label for="Direccion"><h4 class="font-weight-bold">Direccion</h4></label>
                    <InputText @bind-Value="clientes.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => clientes.Direccion)" />
                </div>
                <div class="form-group">
                    <label for="Telefono"><h4 class="font-weight-bold">Telefono</h4></label>
                    <InputText @bind-Value="clientes.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => clientes.Telefono)" />
                </div>

                <div class="form-group">
                    <label for="Deuda"><h4 class="font-weight-bold">Deuda</h4></label>
                    <InputNumber @bind-Value="clientes.Deuda" class="form-control" />
                    <ValidationMessage For="@(() => clientes.Deuda)" />
                </div>


                <div class="form-group">

                    <button type="submit" class="btn btn-primary"> Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                    <button type="button" class="btn btn-danger" @onclick="Limpiar">Limpiar</button>
                </div>

                <h5>@Mensaje</h5>
            </div>
        </div>

    }
    else
    {
        <h1>No esta registrado</h1>
        <a href="ReUsuarios" class="btn btn-primary">Ir al Registro</a>
    }

</EditForm>


@code {
    public Clientes clientes = new Clientes();
    public string Mensaje;
    [Parameter]
    public int ClienteId { get; set; }




    protected override void OnInitialized()
    {
        clientes = new Clientes();
        Limpiar();
        if (ClienteId != 0)
        {
            clientes.IdCliente= ClienteId;
            Buscar();
        }
    }
    public void Guardar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();


        if (controllersClientes.Guardar(clientes))
        {
            this.clientes = new Clientes();
            Mensaje = "Guardado";

        }
        else
        {
            this.clientes = new Clientes();
            Mensaje = "error al guardar";
        }

    }
    public void Limpiar()
    {
        this.clientes = new Clientes();

    }
    public void Buscar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();

        var cliente = controllersClientes.Buscar(clientes.IdCliente);
        if (cliente != null)
        {
            clientes = cliente;
            Mensaje = "Cliente Encontrado, Exito";
        }
        else
        {
            this.clientes = new Clientes();
            Mensaje = "Error en la busqueda, Fallo";
        }

    }
    public void Eliminar()
    {
        ControllersClientes controllersClientes = new ControllersClientes();

        var cliente = controllersClientes.Buscar(clientes.IdCliente);
        if (cliente != null)
        {
            if (controllersClientes.Eliminar(clientes.IdCliente))
            {
                this.clientes = new Clientes();
                Mensaje = "Cliente Eliminado, Exito";
            }
            else
            {
                this.clientes = new Clientes();
                Mensaje = "Error al eliminar,Fallo";
            }
        }
    }
}
